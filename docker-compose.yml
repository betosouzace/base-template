services:
  # Serviço Frontend (Next.js)
  front:
    build:
      context: ./front
      target: development
    volumes:
      - ./front:/app
      - /app/node_modules
      - /app/.next
      - /app/.pnpm-store
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - WATCHPACK_POLLING=true  # Habilita polling para hot reload
      - NEXT_TELEMETRY_DISABLED=1
      - NEXT_PUBLIC_API_URL=http://localhost:8000
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - app-network
    depends_on:
      - api

  # Serviço API (Laravel)
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    volumes:
      - ./api:/var/www
      - api_vendor:/var/www/vendor
    environment:
      - APP_ENV=local
      - APP_DEBUG=true
      - APP_URL=http://localhost:8000
      - FRONTEND_URL=http://localhost:3000
      - SESSION_DOMAIN=localhost
      - SANCTUM_STATEFUL_DOMAINS=localhost:3000
      - CORS_ALLOWED_ORIGINS=http://localhost:3000
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - app-network
    depends_on:
      - db

  # Servidor Nginx
  nginx:
    image: nginx:alpine
    ports:
      - "8000:80"
    volumes:
      - ./api:/var/www
      - ./api/docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    networks:
      - app-network
    depends_on:
      - api
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 3
    extra_hosts:
      - "host.docker.internal:host-gateway"

  # Banco de Dados MySQL
  db:
    image: mysql:8.0
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: ${DB_DATABASE:-laravel}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-root}
      MYSQL_PASSWORD: ${DB_PASSWORD:-root}
      MYSQL_USER: ${DB_USERNAME:-laravel}
    volumes:
      - dbdata:/var/lib/mysql
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  dbdata:
  front_node_modules:
  front_next:
  api_vendor:
